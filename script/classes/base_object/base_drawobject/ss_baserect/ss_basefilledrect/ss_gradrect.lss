class ss_gradrect : ss_basefilledrect {
    property topleftcolor;
    property toprightcolor;
    property bottomleftcolor;
    property bottomrightcolor;
    
    method ss_gradrect(leftSide, topSide, rightSide, bottomSide, z_depth, topLeftVertex, bottomLeftVertex, topRightVertex, bottomRightVertex) {
        this.ss_basefilledrect(leftSide, topSide, rightSide, bottomSide, z_depth);
        if (topLeftVertex != null) {
            this.topleftcolor = topLeftVertex;
        }
        else {
            this.topleftcolor = rgba(0, 0, 0, 255);
        }
        if (bottomLeftVertex != null) {
            this.bottomleftcolor = bottomLeftVertex;
        }
        else {
            this.bottomleftcolor = this.topleftcolor;
        }
        if (topRightVertex != null) {
            this.toprightcolor = topRightVertex;
        }
        else {
            this.toprightcolor = this.topleftcolor;
        }
        if (bottomRightVertex != null) {
            this.bottomrightcolor = bottomRightVertex;
        }
        else {
            this.bottomrightcolor = this.topleftcolor;
        }
        return null;
    }
    
    method initfull() {
        this.rect = gcfilledrectangle::create();
        gcfilledrectangle::setposition(this.rect, this.x1, this.y1, this.x2, this.y2);
        gcfilledrectangle::setvertexcolor(this.rect, 0, this.topleftcolor);
        gcfilledrectangle::setvertexcolor(this.rect, 1, this.toprightcolor);
        gcfilledrectangle::setvertexcolor(this.rect, 2, this.bottomrightcolor);
        gcfilledrectangle::setvertexcolor(this.rect, 3, this.bottomleftcolor);
        gcfilledrectangle::setzdepth(this.rect, this.z);
        return null;
    }
    
    method changegrad(vertex, new_rgba) {
        if (vertex == 0) {
            gcfilledrectangle::setvertexcolor(this.rect, 0, new_rgba);
        }
        else if (vertex == 1) {
            gcfilledrectangle::setvertexcolor(this.rect, 1, new_rgba);
        }
        else if (vertex == 2) {
            gcfilledrectangle::setvertexcolor(this.rect, 2, new_rgba);
        }
        else if (vertex == 3) {
            gcfilledrectangle::setvertexcolor(this.rect, 3, new_rgba);
        }
        return null;
    }
}