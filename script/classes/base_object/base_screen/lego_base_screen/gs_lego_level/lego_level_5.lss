class lego_level_5 : gs_lego_level {
    property sfx_volume;
    
    method lego_level_5() {
        var area;
        this.gs_lego_level("lev5", "lewa", "mtup");
        area = new lego_area_mtup5(this);
        this.areas.__append(area);
        area = new lego_area_le015(this);
        this.areas.__append(area);
        area = new lego_area_le025(this);
        this.areas.__append(area);
        area = new lego_area_le035(this);
        this.areas.__append(area);
        area = new lego_area_le045(this);
        this.areas.__append(area);
        area = new lego_area_cave5(this);
        this.areas.__append(area);
        area = new lego_area_lep15(this);
        this.areas.__append(area);
        area = new lego_area_vllg5(this);
        this.areas.__append(area);
        area = new lego_area_lep25(this);
        this.areas.__append(area);
        area = new lego_area_hive5(this);
        this.areas.__append(area);
        area = new lego_area_gly15(this);
        this.areas.__append(area);
        area = new lego_area_shrn5(this);
        this.areas.__append(area);
        area = new lego_area_le085(this);
        this.areas.__append(area);
        area = new lego_area_wdmn(this);
        this.areas.__append(area);
        area = new lego_area_room5(this);
        this.areas.__append(area);
        area = new lego_area_tura5(this);
        this.areas.__append(area);
        return null;
    }
    
    method initfull() {
        this.lego_level_initfull();
        globalclass.player.addmask("fake", 0);
        globalclass.player.addmask("fake", 1);
        globalclass.player.addmask("fake", 2);
        globalclass.player.addmask("fake", 3);
        globalclass.player.addmask("fake", 7);
        globalclass.player.addmask("fake", 8);
        globalclass.player.addmask("fake", 9);
        globalclass.player.addmask("fake", 10);
        globalclass.player.addmask("fake", 11);
        if (globalclass.saverloaded) {
            if (gcsaver::findmaska(scslosifoundation::stringtoidentifier("mski"), scslosifoundation::stringtoidentifier("cave"))) {
                globalclass.player.addmask("fake", 12);
            }
            if (gcsaver::findmaska(scslosifoundation::stringtoidentifier("mask"), scslosifoundation::stringtoidentifier("hive"))) {
                globalclass.player.addmask("fake", 4);
            }
            if (gcsaver::findglypha(scslosifoundation::stringtoidentifier("glyp"), scslosifoundation::stringtoidentifier("room"))) {
                globalclass.player.addelement();
            }
            if (gcsaver::finditema(scslosifoundation::stringtoidentifier("axe1"), scslosifoundation::stringtoidentifier("le03"))) {
                globalclass.player.setupgrapplinghook();
                globalclass.player.setgrapplinghookdistance(45);
            }
            globalclass.player.initfromsaver();
        }
        else {
            globalclass.unlockdirector.save();
        }
        globalclass.saverloaded = 0;

        //Check for if the level has just started from MTUP and cinematic not played yet; if so a blackscreen is created using fadeoutscreen.  Else, perform a normal fadein for loaded games
        //Additionally, store game SFX volume settings then set to 0 temporarily.  This stored value will be retrieved by the area class to reset the audio properly after the cinematic ends
        if ((scslosifoundation::identifiertostring(gcareadirector::getcurrentarea()) == "mtup") && (gcsaver::findcinema(scslosifoundation::stringtoidentifier("cin1")) == 0)) {
            globalclass.hud.hide();
            globalclass.hud.fadeoutscreen(0);
            this.sfx_volume = gcsaver::getsoundvolume();
            gcsaver::setsoundvolume(0);
        }
        else {
            globalclass.hud.fadeinscreen();
        }
        return null;
    }
    
    method initshort() {
        this.lego_level_initshort();
        globalclass.player.addmask("fake", 0);
        globalclass.player.addmask("fake", 1);
        globalclass.player.addmask("fake", 2);
        globalclass.player.addmask("fake", 3);
        globalclass.player.addmask("fake", 7);
        globalclass.player.addmask("fake", 8);
        globalclass.player.addmask("fake", 9);
        globalclass.player.addmask("fake", 10);
        globalclass.player.addmask("fake", 11);
        return null;
    }

    method cleanupfull() {
        this.lego_level_cleanupfull();
        return null;
    }

    method onevent(param1) {
        this.lego_level_onevent(param1);
        return null;
    }    
}