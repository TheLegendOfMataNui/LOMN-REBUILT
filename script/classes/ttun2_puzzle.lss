class ttun2_puzzle {
    property parent;
    property enteredbackdoor;
    property call_ev_safe_time_once;
    property printglyph;
    
    method ttun2_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        gcmodeldirector::setnearestmax(7);
        gcareadirector::setnearestmax(50);
        gcareadirector::setfog(-9143565, 0 - 1000.0, 0 - 2400.0, 0.01);
        gclightdirector::setcavelighting(0);
        globalclass.bgmusic.changefilename("Root/Data/sounds/MUSICPart2LegoUNDERGROUND");
        globalclass.bgmusic.play();
        this.call_ev_safe_time_once = 1;
        this.enteredbackdoor = 1;
        if (gcsaver::finditem(scslosifoundation::stringtoidentifier("pgl2")) == 0) {
            this.printglyph = new lego_pickup("pgl2", 0, 7, "item", 5, 0);
            this.printglyph.initfull();
        }
        else {
            this.printglyph = new lego_moveableobject("pgl2");
            this.printglyph.initfull();
            this.printglyph.hide();
        }
        return null;
    }
    
    method onevent(param1) {
        if (param1.eventid == 44) {
            if (this.call_ev_safe_time_once) {
                if (gcsaver::getstart() == scslosifoundation::stringtoidentifier("str1")) {
                    this.enteredbackdoor = 1;
                    debug::print("*******************************1 OUT OF WATER");
                    globalclass.player.actor.setunderwater(0);
                }
                else {
                    this.enteredbackdoor = 0;
                    debug::print("*******************************1 IN WATER");
                    globalclass.player.actor.setwaterlevel(1000);
                    globalclass.player.spawnedunderwater = 1;
                }
                this.call_ev_safe_time_once = 0;
            }
        }
        else if (param1.eventid == 27) {
            if (this.enteredbackdoor) {
                globalclass.player.actor.setunderwater(0);
                debug::print("******************************** OUT OF WATER");
            }
            else {
                debug::print("******************************** IN WATER");
                globalclass.player.actor.setwaterlevel(1000);
            }
        }
        return null;
    }
    
    method cleanupfull() {
        this.call_ev_safe_time_once = null;
        this.enteredbackdoor = null;
        if (this.printglyph != null) {
            this.printglyph.cleanupfull();
            this.printglyph = null;
        }
        return null;
    }
    
    method input(param1) {
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
}